arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
#Create plot
ggplot(data=df,
aes(NMDS1,
NMDS2)) +
geom_point(aes(color = Extubation))+
# Draw genus arrows
geom_segment(data = Genus, # This defineds the length of the arrow
aes(x = 0,
y = 0,
xend = NMDS1,
yend = NMDS2),
arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
# Select metadata
meta_table2 <- dplyr::select(filter(meta_data),
c(Previous_ABI))
# Select metadata
meta_table2 <- dplyr::select(filter(meta_data),
c(Previous_ABI))
# Add Treatment group information to the dataframe
df <- data.frame(df, Previous_ABI=meta_table2[,1])
#Create plot
ggplot(data=df,
aes(NMDS1,
NMDS2)) +
geom_point(aes(color = Previous_ABI))+
# Draw genus arrows
geom_segment(data = Genus, # This defineds the length of the arrow
aes(x = 0,
y = 0,
xend = NMDS1,
yend = NMDS2),
arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
# Select metadata
meta_table2 <- dplyr::select(filter(meta_data),
c(ABI_Intubation))
# Add Treatment group information to the dataframe
df <- data.frame(df, ABI_Intubation=meta_table2[,1])
#Create plot
ggplot(data=df,
aes(NMDS1,
NMDS2)) +
geom_point(aes(color = ABI_Intubation))+
# Draw genus arrows
geom_segment(data = Genus, # This defineds the length of the arrow
aes(x = 0,
y = 0,
xend = NMDS1,
yend = NMDS2),
arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
# Select metadata
meta_table2 <- dplyr::select(filter(meta_data),
c(Days_Intubation))
# Add Treatment group information to the dataframe
df <- data.frame(df, Days_Intubation=meta_table2[,1])
#Create plot
ggplot(data=df,
aes(NMDS1,
NMDS2)) +
geom_point(aes(color = Days_Intubation))+
# Draw genus arrows
geom_segment(data = Genus, # This defineds the length of the arrow
aes(x = 0,
y = 0,
xend = NMDS1,
yend = NMDS2),
arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
#Create plot
ggplot(data=df,
aes(NMDS1,
NMDS2)) +
geom_point(aes(color = Days_Intubation))+
geom_path(data=df, aes(x=NMDS1, y=NMDS2), size=1, linetype=2)+
# Draw genus arrows
geom_segment(data = Genus, # This defineds the length of the arrow
aes(x = 0,
y = 0,
xend = NMDS1,
yend = NMDS2),
arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
#Create plot
ggplot(data=df,
aes(NMDS1,
NMDS2)) +
geom_point(aes(color = Days_Intubation))+
geom_path(data=df, aes(x=NMDS1, y=NMDS2), size=1)+
# Draw genus arrows
geom_segment(data = Genus, # This defineds the length of the arrow
aes(x = 0,
y = 0,
xend = NMDS1,
yend = NMDS2),
arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
#Create plot
ggplot(data=df,
aes(NMDS1,
NMDS2)) +
geom_point(aes(color = Days_Intubation))+
# Draw genus arrows
geom_segment(data = Genus, # This defineds the length of the arrow
aes(x = 0,
y = 0,
xend = NMDS1,
yend = NMDS2),
arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
#Create plot
ggplot(data=df,
aes(NMDS1,
NMDS2)) +
geom_point(aes(color = Days_Intubation, size=3))+
# Draw genus arrows
geom_segment(data = Genus, # This defineds the length of the arrow
aes(x = 0,
y = 0,
xend = NMDS1,
yend = NMDS2),
arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
#Create plot
ggplot(data=df,
aes(NMDS1,
NMDS2)) +
geom_point(aes(color = Days_Intubation, size=2))+
# Draw genus arrows
geom_segment(data = Genus, # This defineds the length of the arrow
aes(x = 0,
y = 0,
xend = NMDS1,
yend = NMDS2),
arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
#Create plot
ggplot(data=df,
aes(NMDS1,
NMDS2)) +
geom_point(aes(color = ABI_Intubation, size=2))+
# Draw genus arrows
geom_segment(data = Genus, # This defineds the length of the arrow
aes(x = 0,
y = 0,
xend = NMDS1,
yend = NMDS2),
arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
#Create plot
ggplot(data=df,
aes(NMDS1,
NMDS2)) +
geom_point(aes(color = Previous_ABI, size=2))+
# Draw genus arrows
geom_segment(data = Genus, # This defineds the length of the arrow
aes(x = 0,
y = 0,
xend = NMDS1,
yend = NMDS2),
arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
#Create plot
ggplot(data=df,
aes(NMDS1,
NMDS2)) +
geom_point(aes(color = Extubation, size=2))+
# Draw genus arrows
geom_segment(data = Genus, # This defineds the length of the arrow
aes(x = 0,
y = 0,
xend = NMDS1,
yend = NMDS2),
arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
#Create plot
ggplot(data=df,
aes(NMDS1,
NMDS2)) +
geom_point(aes(color = Extubation),size=2)+
# Draw genus arrows
geom_segment(data = Genus, # This defineds the length of the arrow
aes(x = 0,
y = 0,
xend = NMDS1,
yend = NMDS2),
arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
#Create plot
ggplot(data=df,
aes(NMDS1,
NMDS2)) +
geom_point(aes(color = Extubation, size=2))+
# Draw genus arrows
geom_segment(data = Genus, # This defineds the length of the arrow
aes(x = 0,
y = 0,
xend = NMDS1,
yend = NMDS2),
arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
#Create plot
ggplot(data=df,
aes(NMDS1,
NMDS2)) +
geom_point(aes(color = Age,size=2))+
# Draw genus arrows
geom_segment(data = Genus, # This defineds the length of the arrow
aes(x = 0,
y = 0,
xend = NMDS1,
yend = NMDS2),
arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
#Create plot
ggplot(data=df,
aes(NMDS1,
NMDS2)) +
geom_point(aes(color = Clinic,size=2))+
# Draw genus arrows
geom_segment(data = Genus, # This defineds the length of the arrow
aes(x = 0,
y = 0,
xend = NMDS1,
yend = NMDS2),
arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
# Select metadata
meta_table2 <- dplyr::select(filter(meta_data),
c(Previous_Stay))
# Add Treatment group information to the dataframe
df <- data.frame(df, Previous_Stay=meta_table2[,1])
#Create plot
ggplot(data=df,
aes(NMDS1,
NMDS2)) +
geom_point(aes(color = Previous_Stay, size=2))+
# Draw genus arrows
geom_segment(data = Genus, # This defineds the length of the arrow
aes(x = 0,
y = 0,
xend = NMDS1,
yend = NMDS2),
arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
# Select metadata
meta_table2 <- dplyr::select(filter(meta_data),
c(Sex))
View(meta_table2)
# Add Treatment group information to the dataframe
df <- data.frame(df, Sex=meta_table2[,1])
#Create plot
ggplot(data=df,
aes(NMDS1,
NMDS2)) +
geom_point(aes(color = Sex, size=2))+
# Draw genus arrows
geom_segment(data = Genus, # This defineds the length of the arrow
aes(x = 0,
y = 0,
xend = NMDS1,
yend = NMDS2),
arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
# Select metadata
meta_table2 <- dplyr::select(filter(meta_data),
c(Previous_Stay))
# Add Treatment group information to the dataframe
df <- data.frame(df, Previous_Stay=meta_table2[,1])
#Create plot
ggplot(data=df,
aes(NMDS1,
NMDS2)) +
geom_point(aes(color = Previous_Stay, size=2))+
# Draw genus arrows
geom_segment(data = Genus, # This defineds the length of the arrow
aes(x = 0,
y = 0,
xend = NMDS1,
yend = NMDS2),
arrow = arrow(length = unit(0.2, "cm")), # Define the length of the arrow head
color = "black", # Define the colour of the arrows
alpha = .7) + # Define the thickness of the arrows
# Draw genus names
geom_text(data = as.data.frame(Genus*1.1), # (Genus*1.5) moves the names 1.5 x the length of the arrow.
aes(NMDS1,
NMDS2,
label = rownames(Genus)),
fontface = "italic", # Make genus names italic
color = "black", # Make genus names black
size = 2.5, # Define the size of the genus names
alpha = 1)
install.packages('Seurat')
library(Seurat)
install.packages('Seurat')
install.packages("Seurat")
install.packages("crosstalk")
install.packages("shiny")
devtools::install_github(repo = 'satijalab/seurat', ref = 'release/3.0')
library("devtools", lib.loc="~/Library/R/3.6/library")
install_github(repo = "satijalab/seurat", ref = "release/3.0", dependencies = FALSE)
install.packages('Seurat')
install.packages('devtools')
library("devtools", lib.loc="~/Library/R/3.6/library")
install.packages(c("curl", "tidytree"))
install.packages('seurat')
install.packages('Seurat')
install.packages("Seurat")
install.packages("~/Downloads/Seurat_3.0.2.tar", repos = NULL)
install.packages("Seurat")
install.packages("stringi")
install.packages("devtools")
install.packages("devtools", dependencies = T)
install.packages("devtools")
devtools::install_github("r-lib/devtools")
setwd("~/Documents/Git/Lichen_Microbiome/Data")
#Lichen microbiomes comparison with ALDEx2
OTU = read.table("OTU_table.txt", header=TRUE, sep="\t")
tax = read.table("taxonomy_table.txt", header=TRUE, sep="\t")
